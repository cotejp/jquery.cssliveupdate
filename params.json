{"name":"jquery.cssliveupdate","tagline":"A jQuery plugin to continually update the \"style\" attribute of an element with the content of another element. It facilitates the creation of live CSS demos for conferences, courses, etc.","body":"jquery.cssliveupdate\r\n====================\r\n\r\nA jQuery plugin to continually update the \"style\" attribute of an element with the CSS rules found in another element. It facilitates the creation of live CSS demos for conferences, courses, etc.\r\n\r\nTypically, the source element is either a form field (textarea, input or select) or a regular element with the \"contenteditable\" attribute set.\r\n\r\nTo use it, first load jQuery and the CssLiveUpdate plugin:\r\n\r\n`<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js\"></script>\r\n<script src=\"js/jquery.cssliveupdate.js\"></script>`\r\n\r\nThen, simply assign a jQuery selector to the \"data-cssliveupdate-target\" attribute of the element containing the CSS rules that will be modified. This selector should point to the element that will have its \"style\" attribute updated:\r\n\r\n`<textarea data-cssliveupdate-target=\"#demo\">a {color: red;}</textarea>\r\n<div id=\"demo\">This div will have it's \"style\" attribute modified!</div>`\r\n\r\nAll fields with \"data-cssliveupdate-target\" defined are automatically updated. If you prefer, you can alternatively manually activate or deactivate the live update:\r\n\r\n`$(\"#some-source-element\").cssLiveUpdate(\"activate\", \"some-target-element\");\r\n$(\"#some-source-element\").cssLiveUpdate(\"deactivate\");`\r\n\r\nTested and known to work on : Safari 6 (Mac), Firefox 23 (Mac), Chrome 29 (Mac, Win), Internet Explorer 10 (Win). Let me know if you test it on other platforms.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}